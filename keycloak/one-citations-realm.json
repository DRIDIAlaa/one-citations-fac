{
  "id": "5ffea5bd-1a73-4a04-a825-de53d65d1b07",
  "realm": "one-citations",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "8b3b0dc6-ef68-4c87-a3b0-51746c813736",
        "name": "moderator",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "5ffea5bd-1a73-4a04-a825-de53d65d1b07",
        "attributes": {}
      },
      {
        "id": "70e3dbe5-6fe0-4249-a6a5-b74b87d68e52",
        "name": "writer",
        "description": "",
        "composite": false,
        "clientRole": false,
        "containerId": "5ffea5bd-1a73-4a04-a825-de53d65d1b07",
        "attributes": {}
      },
      {
        "id": "31259d79-b80e-4d17-82e7-fc0d435f5dde",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "5ffea5bd-1a73-4a04-a825-de53d65d1b07",
        "attributes": {}
      },
      {
        "id": "ae15d269-244c-48e3-9dca-01dcf7ab25c1",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "5ffea5bd-1a73-4a04-a825-de53d65d1b07",
        "attributes": {}
      },
      {
        "id": "1a669592-2142-4cd9-9c76-588fb45b889e",
        "name": "default-roles-one-citations",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "5ffea5bd-1a73-4a04-a825-de53d65d1b07",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "7d007906-a89b-42fb-b0b4-937753cb3df0",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "dacd6176-b0b1-4ff3-a161-5d498fbb5db0",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "0c26ab51-f96c-46cb-a99f-69b1af1a8d6c",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "9bff134d-128e-457e-93b7-0df8838be22a",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "6cd77777-3d05-4286-95c1-8e5eb9a0e102",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "82611c23-b410-4378-9929-712f80e770f9",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "08563a06-9724-4810-88ad-51c3b348e691",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "52183f8c-9a07-48cc-a2a6-7b410d18fe2e",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "222defee-368f-4198-8ede-9e1c9f6ea1b9",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "dc8380eb-a737-424a-b461-3f0e4545326d",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "ee748fa7-8dee-487c-aac0-a882e8114440",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "0115eff0-b3b5-4929-b78c-9f384f61a341",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "809a735c-988d-4de7-aa6e-7ece19eba116",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "a3ba67d5-5880-4b27-8082-83a1a9d46b10",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "bcc819bd-bc4a-4025-9e3d-2541e81de810",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "create-client",
                "view-identity-providers",
                "manage-users",
                "impersonation",
                "manage-realm",
                "manage-authorization",
                "query-clients",
                "view-users",
                "view-events",
                "view-clients",
                "view-authorization",
                "manage-clients",
                "manage-identity-providers",
                "query-realms",
                "query-users",
                "view-realm",
                "query-groups",
                "manage-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "eba0644a-9b52-45b4-bee6-3d07da5e4acb",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "f7e45a15-8dfd-428a-9d53-b520abf99879",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "b552a9b6-e84d-4fe3-913a-bd6bf4897d62",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        },
        {
          "id": "94dd4365-5c30-4786-aa3f-8f49308459ef",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "c5672fc0-1351-4b9f-9dba-df1fd6aa2ac4",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "76766a97-ba79-4482-8415-956fa9f41d75",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "a69b0955-d107-4518-883b-c5cdbf810523",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "044933b3-8f3c-4ff2-8325-89f7fbf28547",
          "attributes": {}
        },
        {
          "id": "d94faebb-69c4-490a-90c9-d9abe9404417",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "044933b3-8f3c-4ff2-8325-89f7fbf28547",
          "attributes": {}
        },
        {
          "id": "3fb41f86-25b2-4640-a111-fc638d60b5e7",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "044933b3-8f3c-4ff2-8325-89f7fbf28547",
          "attributes": {}
        },
        {
          "id": "982db9b3-0541-4411-97cd-7e7d261a9339",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "044933b3-8f3c-4ff2-8325-89f7fbf28547",
          "attributes": {}
        },
        {
          "id": "158a8f8a-3066-4adb-a631-edaa03da3e6f",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "044933b3-8f3c-4ff2-8325-89f7fbf28547",
          "attributes": {}
        },
        {
          "id": "5b67e3a9-795d-4bf8-97e4-8f19aba92e0d",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "044933b3-8f3c-4ff2-8325-89f7fbf28547",
          "attributes": {}
        },
        {
          "id": "f080009b-ef23-4af3-84f9-f91c9d2325fb",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "044933b3-8f3c-4ff2-8325-89f7fbf28547",
          "attributes": {}
        },
        {
          "id": "667f0389-0751-44c2-b57d-bf1880b2f56e",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "044933b3-8f3c-4ff2-8325-89f7fbf28547",
          "attributes": {}
        }
      ],
      "swagger": []
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "1a669592-2142-4cd9-9c76-588fb45b889e",
    "name": "default-roles-one-citations",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "5ffea5bd-1a73-4a04-a825-de53d65d1b07"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "9ad32591-a316-4d16-8a30-ffe668944ee0",
      "username": "moderator",
      "firstName": "Titi",
      "lastName": "Titi",
      "email": "moderator@toto.com",
      "emailVerified": true,
      "createdTimestamp": 1729946488721,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "a306fda5-bada-4590-986c-a5ee7ca32808",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1729946512732,
          "secretData": "{\"value\":\"I/9kNPJWe3u8bYLxaAOWS6cXkeH8iG6BMMT/b3rbs1c=\",\"salt\":\"2llvn7A65gvd9ID6pde93g==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "moderator",
        "default-roles-one-citations"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "6c1424da-69e6-4fb4-b6eb-64fac16cff39",
      "username": "writer",
      "firstName": "Toto",
      "lastName": "Toto",
      "email": "writer@toto.com",
      "emailVerified": true,
      "createdTimestamp": 1729946152958,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "f3798145-edee-49b0-b730-9c9c114477b8",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1729946433953,
          "secretData": "{\"value\":\"4fg4XVRhEODMBV9nzOWGIQEg+j68XEeP/4prv8+D8F0=\",\"salt\":\"xRRWBkN2qdK5+K35Q3MXIA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "writer",
        "default-roles-one-citations"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "044933b3-8f3c-4ff2-8325-89f7fbf28547",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/one-citations/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/one-citations/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0f6eb370-ad7d-47d2-a0c8-6420a33fa59b",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/one-citations/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/one-citations/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "bc12e147-6afd-4dbe-b5f9-fcc91e1115c0",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2720056b-c9bd-4d09-9c72-b0f8c0c3a2e1",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "76766a97-ba79-4482-8415-956fa9f41d75",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c12af5c9-1caa-4a0d-88f2-66d3704da1b5",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e841a013-093d-4f3e-b451-fb39b9bbe12a",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/one-citations/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/one-citations/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "920aa88c-916e-4c0c-bed0-ce10d45a9c0f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0e6584e1-53fa-4ba1-b81a-85b52f63bbfc",
      "clientId": "swagger",
      "name": "swagger",
      "description": "swagger",
      "rootUrl": "http://localhost:8888",
      "adminUrl": "http://localhost:8888",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "qeckpLWkfFcyw8nqj5zVXB9LG4dBEewE",
      "redirectUris": [
        "http://localhost:8888/oauth2-redirect.html"
      ],
      "webOrigins": [
        "http://localhost:8888"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1729946077",
        "backchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "6d6f15fa-4b61-46bd-979a-ac5dcdbf91c7",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "68ab48ed-96fa-4492-bfaf-0b4d4714e00f",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "88a83c96-2966-43f4-b5a7-f66c91380fd7",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "89d2543a-5934-4ce1-9235-95f857220527",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "e1587c87-f496-4e1e-bf12-a0aebba75b8e",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "127c1db5-4b3b-4456-81f9-fd6d06b3bcc8",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "c4971cbb-d085-4451-9315-a1263144c103",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "51acb981-bb03-43e6-9095-29460aaf1392",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "f911602d-4822-4ed8-a700-95b9751149da",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "8b1f698f-0e77-4e3f-a82f-e03514ac21db",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "19f1a955-349f-4bf2-aa23-46dd9f95f14a",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "c98068c0-314f-4608-90de-3df1f150c408",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "59862e1f-c056-40d6-af0f-f76a7cc44c11",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "df9c5703-b742-455c-8bc3-86984e70aa0f",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "42dd8ebb-a91b-4b23-a50c-78d374950c85",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "de3c149a-28b8-4012-9a3c-4b1897c315b0",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "570e61e0-baa6-42d7-affb-dc6b0e6b1b7e",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "d37bed56-0d4a-4960-b791-e6b212a86e19",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "6731f083-0f20-4e5f-939a-1cbf2aa994bd",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "17eefc38-d5a5-4bd4-96d4-9886d2e86d97",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "827dcb90-f9ff-4e8c-a960-cb66d0c11fb1",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ff94fced-bb70-4f29-b38e-dddcc8369eba",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c1445b79-8365-418d-ba58-00b21d3d0191",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "a159cdc8-f460-4cb4-8d60-cf74705209d6",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4276181a-29ba-4abc-94f2-95c8083d8351",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4ee8cefa-9cbb-4813-9dd5-faca6d9cd255",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e76b0ae6-2dcb-4129-b448-98b0152975ef",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bf563640-9299-4cde-adbb-214fa14ba9f7",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5e1175d0-aba3-4d68-a979-cef9802e3a38",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c0e26d79-4cb3-4024-b8cd-4d4641deb179",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "35aed66c-c79b-41e7-ad39-3fd806cb7742",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "29ea9a5d-0d7b-4e87-8a25-2f1d1164de1b",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3cf3173e-591b-4403-969c-9a820c03e087",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4a66f4a2-5ad2-4568-81c6-ae1cfc11a405",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "5cfc702e-4a7f-42f6-9d86-ac6acc8ecce7",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "92598175-f16d-47e0-8153-f55e707699d4",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "0c66e69c-2582-4271-947f-4fde4ee634c7",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "47eda09b-280a-4363-8278-526ac18ace07",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "47066f7a-54d7-4a10-8cea-0622d55b6634",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "f086c892-b5e3-4b3c-835b-8c11b397f93e",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "7dc85da6-6dca-43f2-abbd-5b00d504dd16",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9cf7edcf-ced4-4b63-a99d-81984821b5e0",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "8b360bd0-44ed-410c-93db-6b36529fb616",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "bb650705-78b4-4bce-a5c5-06dbc26bccc4",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "6d1f2a7d-e57e-4b75-9998-a61d05e96f80",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "5ad7ea32-ee2e-4f88-8e09-99f66f47ea3f",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "4a1956d9-4acf-4926-ac6b-d27bcbb0221b",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "4decfa22-647b-4020-b354-541dd5610352",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "242f9a0a-4dd8-4faa-b45d-1e330c8b5810",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "cb8126d0-2982-4574-90ff-746ec638781e",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "7de2913a-9eac-4da0-8c0d-37c27af5c08c",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "a3b43752-7125-435c-bc71-9806840ba116",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "8f84db8c-d51b-4b9e-b371-9c74e21e26d5",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEA4a8g8nJc1gx/KCF0nN2J3nhMN0HH4TubAYWukTZvoxzMdW6iCtwCGXJSKUCCuS3WFLdnTowJtlyifFZfM4xLkFk2WvRe46gowR/BZbJ/pFZV8sxGl/uW8tVgKHgl8dQZ8Ns2qzVa7hrDbXTl4Xp5m+lkcsFY0J2VvTwZLGiN7It+k4FUG8hXLoXdDE9dv209dBj9ttbszdNFcnDKIFEi19WuqYNQ4ti1c6/mm2nHqFLb9rX06TjwK8SI92E0Ta1YI/HxOS9q5RvjdSuqh9sJoZ5dDrhMedE/X2qmT4yQUEOO+KedkfDOPxWmTwoYAr7BE3OR3VWpy7B+9QNxhft7iwIDAQABAoIBAG1f1A5b6W0dQlTfHeZWIZaNY5aWDTo1inJK6ObcZG8/KkGxW9v6cxQFCReP+aqoMav5lJoHGT/lliO/MkVHtWlgKw0aiJA5c4LhEnfocZ7h7qaMZJwMpMPMMF18mRshqW7GtrBz270wgEzgTfagRiaPDozk8lesP6El6qdQhpO/wAdj9UIiymUcP+E9VTIYb3djFTGnFANg70cdPUKyk3ZxIXM+6V4ZDrfzmyluqNOnTjkeSlfzu4t4gWwZclIIx+0bP1p+sLc+zwTg8hXMxVkvSnsZNIHmowedoEROQc7hulIbAEl92OlM3igtmiJVhrAo5uvPvGAi5KPl2BV8BoUCgYEA9wKekrx9WqFXsNRDwLm2oenF0NjGByLrryIFNNnVwsxePR0fxys3mWo7McHzddr5wqtBNhytK5qMGDrcuT5eFMC/9L7NurbP1zq5i5wUffZohC+opDMyQv6H6Mb2hQbkXJPYfGPSETr9dEy8X+pYxFsnjD5ioER3fnU45HX8dZ8CgYEA6eXQmlYoC73SXVMzupddpu9G5Bx+PBaKDYOgMTS8JxaQhfk+yHobfsGyzvKaXbqApYQ1/3mgmmhMkC6SlythzT1kYdXmOvnPRpTrnl1pYtUxsuvfA5FCmxuC60yXPG6JXIqPVLp5GskjCVdulvDSd6/ZakX7I96bmT0/VFx7OpUCgYEAtg8IMb8b5aDlsT/CcFpxcgWL99LOopPqgrrge4PTOjDHhOPieDoyULEr0BDUERnE3Oa8udWJDYprl7BK335IeaNX2FyJ5gS4TDrMZ0ozEGR9xHAcLGpPsXFJWxjKumHKDzIpbgVk365LAV1NuqRPqOpGy+dvahEMwfhEZp9P5KECgYBWY8mul4/m9k+SpL6AdpPiqpIWguelLfYDk9BBHGc6UL1EnpCv31n0cXqnsTeO0undOH3xRG0rWsaconcGWsGe2sQO1sBYnBgQy8RTE9Fu7auTmEcgvDBLtdefLQTXD0Sw54SVGOLOH+hO9PolygESr+Kvu/VMhFYYPWT8tcPWGQKBgE+kbuy8d6bpP25rJ9ZdPxv07jEucb7k8nTdry+8FtDWGWsu5F7us+ctJUljW3nhESYmaFhVxOO5VNFC6gwZSRrLsdrQhSo0WXNrY2rmQjByTgby32Wz1Yp+AqlkHA0FybWtl/SsNzan8S61GMWeLBRyUD6PZgpnRJJdCCtjaJq+"
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICqTCCAZECBgGSyM/XxTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1vbmUtY2l0YXRpb25zMB4XDTI0MTAyNjEyMzAxN1oXDTM0MTAyNjEyMzE1N1owGDEWMBQGA1UEAwwNb25lLWNpdGF0aW9uczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOGvIPJyXNYMfyghdJzdid54TDdBx+E7mwGFrpE2b6MczHVuogrcAhlyUilAgrkt1hS3Z06MCbZconxWXzOMS5BZNlr0XuOoKMEfwWWyf6RWVfLMRpf7lvLVYCh4JfHUGfDbNqs1Wu4aw2105eF6eZvpZHLBWNCdlb08GSxojeyLfpOBVBvIVy6F3QxPXb9tPXQY/bbW7M3TRXJwyiBRItfVrqmDUOLYtXOv5ptpx6hS2/a19Ok48CvEiPdhNE2tWCPx8TkvauUb43UrqofbCaGeXQ64THnRP19qpk+MkFBDjvinnZHwzj8Vpk8KGAK+wRNzkd1VqcuwfvUDcYX7e4sCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAsbXJx50jI64QKwJHnGXMwWpiHNWWtq1YWAG+Uissj/2tEmesvqHSVGiZVPACYvyGZzi1BLZG2fgnCtY2ap89XhVhEBgCtZd5ppGm+9l7CZoa/0ePFnzktT9Kh9rVUAzXFOSFY3bp9F3fJBkZWn/1TIqa7EbrTojsHuUgZBHCMmJN2FIhxknb4GWmWzPorq77r+9fo/rqfMGLFU7T+474SKbjZuOLuRYDxP01lXMUAwXS2mnnxXJU7JJnmiZCJBG2vbeRtNnt1pmU5FutUd5rJburG3BT9q+aj2kYV+53H7IhGKO8L4RQizXlcH1vGuTQZczixFqUektXXYOl8Y6Y7g=="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "7fcb3755-d779-4973-9227-7d4c7f88ef61",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpQIBAAKCAQEAvkhP29HPSsyLh9mn+pqsgCBz3lAElzfTEXoXHy0aZE6OilSjNx0iYSGuvxvIsUCT3nba8WjNMCE6+d1nNdd8fSDwnRk9WYeZXYNiGLJU6D3XiVTil05jrWix8aFO3Z5s7v4jOjaoLnsqhatkkB9jwGzXuGFF6XA3FBveHwsJjIZmqZRmKmMrn2TUrBPuqCRCUZ/0kw7L4Lr/+wE2giE6Cx08o863yQWSTuyJpIkbjlscuqxh3aDcTSjhJSdzs8+xT7GxHkJMoXRz0MgaBV+oxXmQK71Ppd3fjUvPCtOhQmrmcXw1UMFIFTIUPRnLJ4r0ZasBF9ka7NHU2bsxMYKv+wIDAQABAoIBABsUMl0vhgb4hfDOzkNxKJRRSfv8ujKE7MIjdE/o/MUCkvFnqxSITmCxSOuEejKTZJe3pV/OkMjFKd3uHqaAZIRwIB3TPjJUBETVEiw+kKu+RUKTdG2g57mBWTVwRcdvKMR4IS5DIfr/ZyU/p1+FQA5dzvM70JWwdP4lGx6i1PiM1pW8RvaKatMQi1gKQf9sT/qFy+uisDJPdyNUZFsy8g15cRWlXogpSm50D1TA8tCHsWZtPV0RLML3MekOFjTAJA602w2zGpf987RFTabrRJFpqSZllP3dTqxbOu6AwFLNjZkzzhUmilfuxiSfK4HjPvvUeqyfspHt6+GrAeS//1UCgYEA+j9yJySris0ULRPE3jYEh7M0Hr8+3r0V+yHdN29IbrSjDBQluwHAf30evhFO3+nz5m+owgrl5fhK4J4jNSMH1RqVy2NWAXRVD77eP6t42i64frgj3kceTFRkFnS6Rr50rW77WJlMR5Xe8AUPe3zAyQfkTocaAhfbp07MDsBa3KcCgYEAwqgBwVcCgwpM2wSJQR78tQmdTKCI/WcRXDkSqE5OXR6wI3A0iBRdQNSeG+wnSqE4CyBv+9KbElNGv+SFQntAXXepIJslmTJLofzxR6jOE3rmtlkM1xGjBwYSqBVRjzqp3Psp2xWr1LCllNt9Dospcn9YzoFdcWtBzd4wYNpsmI0CgYEAlUULHnYtLNovUsQcBkBKa3dle4GwSsSXO/lzLwHePsrZBvdtmiLtZB6KG+3PEplGtwmbrEM75vU4FMu/TI7cuSzmdS+Huc5efsnnYCs0J1D/E/dazde2Jumf2hU+l7w7dMhifPLUIU8wcBNUrOA5TrC6am0EAoOgrie+aH4stLkCgYEAhaPW4Kgd/11Y+p0Ypm7hzGD3b55frqnOT2SXnJl2T5Q8FXh5eFuS0mmmy0DMkP4yfeEdQOSMtn4Z+rCnlMcNn54BrXMW0yCmsGX6ONp58QHV16c3m4huRuoycNeCETWTXTXKvLEaMYG9jH9MUmnUYNlxXQWP48hhezdqO3R6ThkCgYEA4ZSshhGEdMSeOA+IJQNDWFh+JGTFYxoT9e2L2EDKJsfh2hJHdMDCs4PZ38wXFJHuM+5NzmtQ14OnDJmbXUlTUeSnDjxgnGREqLUQ7nDcwL1Q2ayck80fRd6PkoLSfw8b1GwEvWyOrY9ZU3/pse3ALwHL6YPmYizmN4j39pdeKlE="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICqTCCAZECBgGSyM/YajANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1vbmUtY2l0YXRpb25zMB4XDTI0MTAyNjEyMzAxN1oXDTM0MTAyNjEyMzE1N1owGDEWMBQGA1UEAwwNb25lLWNpdGF0aW9uczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL5IT9vRz0rMi4fZp/qarIAgc95QBJc30xF6Fx8tGmROjopUozcdImEhrr8byLFAk9522vFozTAhOvndZzXXfH0g8J0ZPVmHmV2DYhiyVOg914lU4pdOY61osfGhTt2ebO7+Izo2qC57KoWrZJAfY8Bs17hhRelwNxQb3h8LCYyGZqmUZipjK59k1KwT7qgkQlGf9JMOy+C6//sBNoIhOgsdPKPOt8kFkk7siaSJG45bHLqsYd2g3E0o4SUnc7PPsU+xsR5CTKF0c9DIGgVfqMV5kCu9T6Xd341LzwrToUJq5nF8NVDBSBUyFD0ZyyeK9GWrARfZGuzR1Nm7MTGCr/sCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAh/kWUHNyBx9fKdwprcOW7IFut2jVUneCqhw0ONjQLQq4fvPp1D370ARNYjyg0o0mSAW2e/RaFqiTU/WR8uuByrTRvtCRaluxcaqmL50CFyyFQU3jvciNciZ17T2Wdsn5gFxEdQvJ+sn6tikCKdwG6NaMDkQGCgZm3MUdRg6iGA1AeGHV7HQwp1D+0003vxQ9FWpQSBJi0sQoE8ta4krD56395GZ2NASNfhVYsbu9y9QbaGc48orSumIpopDbd74Lr/RDvGFAFlPxQV6MNp/xGH5DAtBgLjtqy7Y3cVYA0tWQQJBAF1P8kHEACAYG/pzubPnJOKMoaF2r44AjMJxBOA=="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "3a120983-dc5c-4c3c-9c97-ef4f6da37852",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "64898da0-0b97-4038-a656-9147e6e503eb"
          ],
          "secret": [
            "NPbV0GGhQWqiFJW0Qmw3P4h_v3PyVatZUP_9OGBpClA0HdfVBFBh-WRKTO17pFO2SLseSrHm2a_5ESu2_yTQL64eIMTv4_S7DnXXsvJpOyiDY4A7vZ4ZlgbtnuAiM4-9ptr3I3EprPVloRqBiIBSQ5OGc7Zb10pAogvosTQ5kIo"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      },
      {
        "id": "a8bb1784-9bd2-416a-a5cb-654838c111b4",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "595299ea-6013-4869-bf55-1771b94066b0"
          ],
          "secret": [
            "LFMYaPHgXYYOI_VJvyIw5Q"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "279054b8-980b-4072-b7a9-7b562b155296",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "768d61ee-67cc-46e6-89df-ffa39884f692",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ea5f4846-0dd5-49a9-abd5-eb75ca718ef8",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cdc291c2-9bc2-40aa-8ddc-d671e7d93299",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e4ed53a9-d1cf-4668-b9ec-f670e15ae72c",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "307f53d4-4915-464d-b75a-c34315a1110b",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6413ee37-bbee-4198-b87f-c7fa8328b9e2",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cf7e5c9b-197b-4239-9ece-98db23a9f268",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "279d1aaa-3514-4a81-8593-a344fdc484cb",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7b6b45e5-105c-47f1-897d-8b89ad03e15a",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f60ccb7f-f92a-4ebc-9030-c246f6073ecc",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "86342f7c-b2db-4ad1-978d-2492adf40180",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f040000d-bd2c-4ca6-8301-3e3e153b2248",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "80ecec86-dea6-45c5-9075-4da2e4799bf5",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "56a3280f-fa05-4857-bb58-c5d0547c35a6",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f945416d-c47e-47f4-bc30-3820f0ec2d41",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "393ff061-b0c3-46b3-bcec-34c616e274d7",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c1d58751-a441-4295-9dda-29fb6627edd6",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6c79feaa-4002-48b9-91ce-5d8b364a6b23",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "813f6de2-aa16-430b-8052-b5378b6d4526",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f35ed84e-6e4a-4576-a7af-0896b1d59f60",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "b742c3dc-646f-4087-bc95-7a87586183ef",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "5cb50659-6671-474d-bb58-f69e891edac3",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "26.0.2",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}