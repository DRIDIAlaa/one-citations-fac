openapi: 3.0.0
info:
  title: One Citations API
  description: Notre super API pour notre application de gestion des citations et des images
  version: 1.0.0

servers:
  - url: http://localhost:9082/api/v1
    description: Environnement de test Docker
  - url: http://localhost:9090/api/v1
    description: Environnement de test local

components:
  securitySchemes:
    oAuthSample:
      type: oauth2
      description: Cette API utilise OAuth 2 avec le flux d'autorisation. [Plus d'infos](https://api.example.com/docs/auth)
      flows:
        authorizationCode:
          authorizationUrl: http://keycloak:8080/realms/one-citations/protocol/openid-connect/auth
          tokenUrl: http://keycloak:8080/realms/one-citations/protocol/openid-connect/token
          scopes:
            profile: Accès au profil
            email: Accès à l'email

  schemas:
    ProfileDto:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique du profil
        userId:
          type: string
          description: Identifiant unique de l'utilisateur
        mail:
          type: string
          format: email
          description: Adresse e-mail de l'utilisateur
        age:
          type: integer
          minimum: 13
          description: Âge de l'utilisateur (minimum 13 ans)
        firstName:
          type: string
          description: Prénom de l'utilisateur
        lastName:
          type: string
          description: Nom de famille de l'utilisateur
      required:
        - userId
        - mail

    CitationDto:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the citation.
        text:
          type: string
          description: The text of the citation.
        writerName:
          type: string
          description: The name of the writer who submitted the citation.
        validatorName:
          type: string
          description: The name of the validator who validated the citation.
        submissionDate:
          type: string
          format: date-time
          description: The date and time when the citation was submitted, formatted as "YYYY-MM-DD HH:mm:ss".
        modificationDate:
          type: string
          format: date-time
          description: The date and time when the citation was last modified.
        validated:
          type: boolean
          description: Indicates whether the citation has been validated.
security:
  - oAuthSample:
      - profile
      - email

paths:
  /profiles/current:
    get:
      summary: Retourne le profil courant de l'utilisateur
      responses:
        '200':
          description: Profil de l'utilisateur courant
          content:
            application/json:
              schema:
                type: object
                properties:
                  principal:
                    type: object

  /profiles/{id}:
    get:
      summary: Récupère un profil par son ID
      parameters:
        - name: id
          in: path
          required: true
          description: Identifiant du profil
          schema:
            type: string
      responses:
        '200':
          description: Profil récupéré avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDto'

  /citations/random:
    get:
      summary: Retourne une citation validée aléatoire
      responses:
        '200':
          description: Citation aléatoire
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitationDto'

  /citations:
    post:
      summary: Soumettre une nouvelle citation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitationDto'
      responses:
        '201':
          description: Citation soumise avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitationDto'

  /random-image:
    get:
      summary: Retourne une image aléatoire redimensionnée
      description: Génère et retourne une image aléatoire avec les dimensions spécifiées.
      parameters:
        - name: width
          in: query
          required: true
          description: Largeur de l'image en pixels
          schema:
            type: integer
            example: 300
        - name: height
          in: query
          required: true
          description: Hauteur de l'image en pixels
          schema:
            type: integer
            example: 300
      responses:
        '200':
          description: Image aléatoire retournée avec succès
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '400':
          description: Requête invalide (dimensions incorrectes)
        '500':
          description: Erreur interne du serveur
